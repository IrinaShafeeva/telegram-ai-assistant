#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–æ—Ç–∞
 */

const fs = require('fs');
const path = require('path');

console.log('ü§ñ Safe Bot Testing Setup');
console.log('========================\n');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env —Ñ–∞–π–ª–∞
const envPath = path.join(__dirname, '.env');
if (!fs.existsSync(envPath)) {
  console.log('‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!');
  console.log('üìù –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –∏–∑ —à–∞–±–ª–æ–Ω–∞:');
  console.log('   npm run setup:local\n');
  process.exit(1);
}

require('dotenv').config();

const botToken = process.env.BOT_TOKEN || process.env.TELEGRAM_BOT_TOKEN;
const useWebhook = process.env.USE_WEBHOOK === 'true';

console.log('üîç –¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:');
console.log(`   BOT_TOKEN: ${botToken ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);
console.log(`   USE_WEBHOOK: ${useWebhook ? '‚úÖ –î–∞ (webhook —Ä–µ–∂–∏–º)' : '‚ùå –ù–µ—Ç (polling —Ä–µ–∂–∏–º)'}`);
console.log(`   NODE_ENV: ${process.env.NODE_ENV || 'development'}\n`);

if (useWebhook) {
  console.log('‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ë–æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ webhook —Ä–µ–∂–∏–º–µ!');
  console.log('üìã –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –±–æ—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.');
  console.log('üö´ –ù–µ–ª—å–∑—è –∑–∞–ø—É—Å–∫–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π polling —Ä–µ–∂–∏–º –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ!\n');
  
  console.log('üí° –í–∞—Ä–∏–∞–Ω—Ç—ã —Ä–µ—à–µ–Ω–∏—è:');
  console.log('   1. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä–Ω—ã–π –±–æ—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ');
  console.log('   2. –ò–∑–º–µ–Ω–∏—Ç—å USE_WEBHOOK=false –≤ .env');
  console.log('   3. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞\n');
  
  console.log('üõ†Ô∏è  –î–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
  console.log('   1. –°–æ–∑–¥–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ @BotFather');
  console.log('   2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ–∫–µ–Ω –≤ .env');
  console.log('   3. –ò–ª–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –∏–∑–º–µ–Ω–∏—Ç–µ USE_WEBHOOK=false\n');
  
  const readline = require('readline');
  const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
  });
  
  rl.question('‚ùì –•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å USE_WEBHOOK=false –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è? (y/n): ', (answer) => {
    if (answer.toLowerCase() === 'y' || answer.toLowerCase() === 'yes') {
      // –ò–∑–º–µ–Ω–∏—Ç—å USE_WEBHOOK –Ω–∞ false
      const envContent = fs.readFileSync(envPath, 'utf8');
      const newEnvContent = envContent.replace(
        /USE_WEBHOOK=true/g, 
        'USE_WEBHOOK=false'
      );
      
      if (newEnvContent !== envContent) {
        fs.writeFileSync(envPath, newEnvContent);
        console.log('‚úÖ USE_WEBHOOK –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ false');
        console.log('üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å: npm run local');
      } else {
        console.log('‚ÑπÔ∏è  USE_WEBHOOK —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ false');
      }
    } else {
      console.log('‚ÑπÔ∏è  –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é');
      console.log('üí° –ü–æ–º–Ω–∏—Ç–µ: –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä–Ω—ã–π –±–æ—Ç –ø–µ—Ä–µ–¥ –ª–æ–∫–∞–ª—å–Ω—ã–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º!');
    }
    
    rl.close();
  });
  
} else {
  console.log('‚úÖ –ë–æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ polling —Ä–µ–∂–∏–º–µ - –±–µ–∑–æ–ø–∞—Å–Ω–æ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
  console.log('üöÄ –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å: npm run local');
}
