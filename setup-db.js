require('dotenv').config();
const { supabase } = require('./src/config/database');
const fs = require('fs');

async function setupDatabase() {
    console.log('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Supabase...\n');
    
    try {
        // –ß–∏—Ç–∞–µ–º SQL —Ñ–∞–π–ª
        const sql = fs.readFileSync('supabase-simple.sql', 'utf8');
        console.log('üìã SQL —Ñ–∞–π–ª –ø—Ä–æ—á–∏—Ç–∞–Ω, —Ä–∞–∑–º–µ—Ä:', sql.length, '—Å–∏–º–≤–æ–ª–æ–≤');
        
        // –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
        const commands = sql.split(';').filter(cmd => cmd.trim());
        console.log('üìù –ù–∞–π–¥–µ–Ω–æ –∫–æ–º–∞–Ω–¥:', commands.length);
        
        // –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—ã –ø–æ –æ—á–µ—Ä–µ–¥–∏
        for (let i = 0; i < commands.length; i++) {
            const command = commands[i].trim();
            if (!command) continue;
            
            try {
                console.log(`\nüîÑ –í—ã–ø–æ–ª–Ω—è—é –∫–æ–º–∞–Ω–¥—É ${i + 1}/${commands.length}...`);
                console.log('–ö–æ–º–∞–Ω–¥–∞:', command.substring(0, 100) + '...');
                
                const { error } = await supabase.rpc('exec_sql', { sql: command });
                
                if (error) {
                    // –ï—Å–ª–∏ exec_sql –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ raw query
                    console.log('‚ö†Ô∏è exec_sql –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–æ–±—É–µ–º raw query...');
                    const { error: rawError } = await supabase.rpc('exec', { query: command });
                    
                    if (rawError) {
                        console.log('‚ö†Ô∏è –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞ (–≤–æ–∑–º–æ–∂–Ω–æ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞):', rawError.message);
                    } else {
                        console.log('‚úÖ –ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —á–µ—Ä–µ–∑ raw query');
                    }
                } else {
                    console.log('‚úÖ –ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞');
                }
                
            } catch (cmdError) {
                console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã:', cmdError.message);
                console.log('–ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞');
            }
        }
        
        console.log('\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
        console.log('\nüìä –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ:');
        console.log('‚Ä¢ –°–æ—Ö—Ä–∞–Ω—è—Ç—å —Ä–∞—Å—Ö–æ–¥—ã –∏ –¥–æ—Ö–æ–¥—ã');
        console.log('‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å –∑–∞–¥–∞—á–∏');
        console.log('‚Ä¢ –†–∞–±–æ—Ç–∞—Ç—å —Å Google Sheets');
        console.log('‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
        console.log('\nüí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å SQL –≤—Ä—É—á–Ω—É—é –≤ Supabase Dashboard');
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
setupDatabase();
