#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–∂–¥—É webhook –∏ polling —Ä–µ–∂–∏–º–∞–º–∏
 */

const fs = require('fs');
const path = require('path');

const envPath = path.join(__dirname, '.env');

if (!fs.existsSync(envPath)) {
  console.log('‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!');
  process.exit(1);
}

const mode = process.argv[2];

if (!mode || !['webhook', 'polling'].includes(mode)) {
  console.log('üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ –±–æ—Ç–∞');
  console.log('==========================\n');
  console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:');
  console.log('  node switch-mode.js webhook  - –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –≤ webhook —Ä–µ–∂–∏–º (–¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞)');
  console.log('  node switch-mode.js polling  - –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –≤ polling —Ä–µ–∂–∏–º (–¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)');
  console.log('');
  process.exit(1);
}

try {
  let envContent = fs.readFileSync(envPath, 'utf8');
  
  // –ò–∑–º–µ–Ω–∏—Ç—å USE_WEBHOOK
  if (mode === 'webhook') {
    envContent = envContent.replace(/USE_WEBHOOK=false/g, 'USE_WEBHOOK=true');
    envContent = envContent.replace(/USE_WEBHOOK=true/g, 'USE_WEBHOOK=true');
    
    // –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ —Å—Ç—Ä–æ–∫–∞ –µ—Å—Ç—å
    if (!envContent.includes('USE_WEBHOOK=')) {
      envContent += '\nUSE_WEBHOOK=true\n';
    }
    
    console.log('‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω –≤ webhook —Ä–µ–∂–∏–º (–¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞)');
    console.log('üìã –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ WEBHOOK_URL –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
    
  } else if (mode === 'polling') {
    envContent = envContent.replace(/USE_WEBHOOK=true/g, 'USE_WEBHOOK=false');
    envContent = envContent.replace(/USE_WEBHOOK=false/g, 'USE_WEBHOOK=false');
    
    // –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ —Å—Ç—Ä–æ–∫–∞ –µ—Å—Ç—å
    if (!envContent.includes('USE_WEBHOOK=')) {
      envContent += '\nUSE_WEBHOOK=false\n';
    }
    
    console.log('‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω –≤ polling —Ä–µ–∂–∏–º (–¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)');
    console.log('üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å: npm run local');
  }
  
  fs.writeFileSync(envPath, envContent);
  
  console.log('\nüìù –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π .env —Ñ–∞–π–ª:');
  const lines = envContent.split('\n');
  const webhookLine = lines.find(line => line.startsWith('USE_WEBHOOK='));
  if (webhookLine) {
    console.log(`   ${webhookLine}`);
  }
  
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ .env —Ñ–∞–π–ª–∞:', error.message);
  process.exit(1);
}
